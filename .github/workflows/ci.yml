name: 🚀 DevOps Monitoring Stack CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 6 * * *'

env:
  COMPOSE_FILE: docker-compose.yml
  HEALTH_CHECK_TIMEOUT: 120

jobs:
  lint-and-validate:
    name: 🔍 Lint & Validate
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🐳 Validate Docker Compose
        run: |
          echo "🔍 Validating docker-compose.yml..."
          docker compose config
          echo "✅ Docker Compose is valid!"
          
      - name: 📋 Check Required Files
        run: |
          echo "🔍 Checking required files..."
          
          required_files=(
            "docker-compose.yml"
            "prometheus/prometheus.yml" 
            "nginx/nginx.conf"
            "README.md"
          )
          
          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "✅ $file exists"
            else
              echo "❌ $file missing!"
              exit 1
            fi
          done
          
          echo "✅ All required files present!"
          
      - name: 📊 Show Project Info
        run: |
          echo "📊 Project Information:"
          echo "  Prometheus config size: $(wc -c < prometheus/prometheus.yml) bytes"
          echo "  Nginx config size: $(wc -c < nginx/nginx.conf) bytes"
          echo "  Docker services:"
          docker compose config --services | sed 's/^/    - /'
          echo "✅ Validation completed!"

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: lint-and-validate
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🛡️ Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '0'

  integration-test:
    name: 🧪 Integration Tests
    runs-on: ubuntu-latest
    needs: [lint-and-validate, security-scan]
    strategy:
      matrix:
        test-scenario: [basic, load-test]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🐳 Start monitoring stack
        run: |
          echo "🚀 Starting all services..."
          docker compose up -d
          echo "📊 Services started, checking containers..."
          docker compose ps
          
      - name: ⏳ Wait for services to be ready
        run: |
          echo "⏳ Waiting for services to initialize..."
          sleep 60
          
      - name: 🧪 Health Check Tests
        run: |
          echo "=== 🌐 Testing Web Application ==="
          for i in {1..5}; do
            if curl -f -s http://localhost:7070; then
              echo "✅ Web app responding (attempt $i)"
              break
            fi
            echo "⏳ Web app not ready, waiting... (attempt $i)"
            sleep 10
          done
          
          echo "=== 📊 Testing Prometheus ==="
          for i in {1..5}; do
            if curl -f -s http://localhost:9090/-/healthy; then
              echo "✅ Prometheus healthy (attempt $i)"
              break
            fi
            echo "⏳ Prometheus not ready, waiting... (attempt $i)"
            sleep 10
          done
          
          echo "=== 📈 Testing Grafana ==="
          for i in {1..5}; do
            if curl -f -s http://localhost:3000/api/health; then
              echo "✅ Grafana healthy (attempt $i)"
              break
            fi
            echo "*
